---
name: App Infra

env:
  APP_DIR: app
  IAC_DIR: .iac/infra_app
  BUILD_DIR: build
  BUILD_ARTIFACT: build

on:
  pull_request:
    branches:
      - main
      - uat
      - develop
    paths:
      - ".iac/infra_app/**"
      - '.github/workflows/infra-app.yml'
      - "app/**"
  push:
    branches:
      - main
      - uat
      - develop
    paths:
      - ".iac/infra_app/**"
      - '.github/workflows/infra-app.yml'
      - "app/**"
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  release:
    types:
      - published
    paths:
      - ".iac/infra_app/**"
      - '.github/workflows/infra-app.yml'
      - "app/**"

permissions:
  contents: read
  pull-requests: write

jobs:
  dump-context:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
  paths-filter:
    if:
      (
        (startsWith(github.ref, 'refs/pull') &&
        endsWith(github.ref, '/merge') &&
        github.head_ref == 'uat' &&
        github.base_ref == 'main' &&
        github.event_name == 'pull_request')
      ) ||
      (github.event_name == 'push' &&
        (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main')
      ) ||
      github.event_name == 'release'
    outputs:
      infra_app: ${{ steps.filter.outputs.infra_app }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            infra_app:
              - "${{ env.IAC_DIR }}/aws/**"
              - '.github/workflows/infra-app.yml'
              - "${{ env.APP_DIR }}/**"

  build-node:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: |
      needs.paths-filter.outputs.infra_app == 'true' ||
      github.event_name == 'release'
    # env:
    #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      build-artifact-uuid: ${{ steps.build-artifact-uuid.outputs.BUILD_ARTIFACT_UUID }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: latest
          # registry-url: 'https://registry.npmjs.org'
          # registry-url: 'https://npm.pkg.github.com'

      # - name: Install pnpm
      #   run: npm install --global pnpm vite

      # - name: Cache .pnpm-store
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.pnpm-store
      #     key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-

      - name: Install dependencies
        env:
          # GITHUB_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
          NODE_ENV: production
        working-directory: app
        run: |
          npm install --global vite
          rm package-lock.json
          npm i
          # pnpm install --frozen-lockfile

      - name: Build
        working-directory: app
        env:
          NODE_ENV: production
        run: |
          pwd
          ls -la
          ls -la node_modules
          npm run build-ci
          # pnpm build-ci

      - name: Compress build
        working-directory: app
        # run: |
        #   zip -r ${{ env.BUILD_ARTIFACT }}.zip ${{ env.BUILD_DIR }}/*
        run: |
          cd ${{ env.BUILD_DIR }}
          zip -r ${{ env.BUILD_ARTIFACT }}.zip ./*

      - name: Set build artifact UUID
        id: build-artifact-uuid
        env:
          BUILD_ARTIFACT_UUID: build-${{ github.sha }}-${{ github.ref_name }}
          BUILD_ARTIFACT_UUID_UAT: build-${{ github.sha }}-${{ github.head_ref }}
          IS_DEV: ${{ github.ref == 'refs/heads/develop' }}
          IS_MAIN: ${{ github.ref == 'refs/heads/main' }}
          IS_UAT: ${{ github.head_ref == 'uat' }} && ${{ github.base_ref == 'main' }} && ${{ github.event_name == 'pull_request' }} && ${{ startsWith(github.ref, 'refs/pull') }} && ${{ endsWith(github.ref, '/merge') }}
        run: |
          if [ "$IS_DEV" = true ]; then
            echo "BUILD_ARTIFACT_UUID=${BUILD_ARTIFACT_UUID}" >> $GITHUB_OUTPUT
          elif [ "$IS_MAIN" = true ]; then
            echo "BUILD_ARTIFACT_UUID=${BUILD_ARTIFACT_UUID}" >> $GITHUB_OUTPUT
          elif [ "$IS_UAT" = 'true && true && true && true && true' ]; then
            echo "BUILD_ARTIFACT_UUID=${BUILD_ARTIFACT_UUID_UAT}" >> $GITHUB_OUTPUT
          fi

      - name: Upload build
        id: upload-build
        if: |
          (github.event_name == 'push' &&
          (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main')
          ) ||
          github.event_name == 'release'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build-artifact-uuid.outputs.BUILD_ARTIFACT_UUID }}
          path: "${{ env.APP_DIR }}/${{ env.BUILD_DIR }}/${{ env.BUILD_ARTIFACT }}.zip"

      - name: Upload build - UAT
        id: upload-build-uat
        if: |
            (startsWith(github.ref, 'refs/pull') &&
            endsWith(github.ref, '/merge') &&
            github.head_ref == 'uat' &&
            github.base_ref == 'main' &&
            github.event_name == 'pull_request')
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build-artifact-uuid.outputs.BUILD_ARTIFACT_UUID }}
          path: "${{ env.APP_DIR }}/${{ env.BUILD_DIR }}/${{ env.BUILD_ARTIFACT }}.zip"

  deploy:
    uses: shortpoet/.github/.github/workflows/deploy-dev_push-uat_merge-prod_release.yml@main
    secrets: inherit
    needs: [paths-filter, build-node]
    # can't seem to use if release here because of needs
    if: |
      needs.paths-filter.outputs.infra_app == 'true' ||
      github.event_name == 'release'
    with:
      base_path: ".iac/infra_app/aws"
      infra_type: App
      provider: aws
      build_path: "app/build"
      build_artifact: "build"
      build_artifact_uuid: ${{ needs.build-node.outputs.build-artifact-uuid }}
